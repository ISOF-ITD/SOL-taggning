c
element.to_s
element
q
child.to_s
child.to_s =~ /â€“/
child.is_a? Text
child
p.to_s
c
p.to_s
child
c
p.to_s
child
c
p.to_s
child
c
child
c
child
c
child
c
child
q
child.to_s
child
c
child
c
child
c
child
c
child
c
element.to_s
element
c
state
child.to_s
p.to_s
child
state
c
child
c
child.to_s
c
p.to_s
child
n
child
n
child
c
p.to_s
child.to_s
child
n
child
n
child
c
child
c
q
n
p.to_s
child.to_s
n
child.attributes['type'] == 'kursiv'
child.name == 'span'
child.is_a? Element
child.class
p.to_s
child.to_s
child
c
q
p.to_s
child
n
child
n
child.attributes['type']
child.name
child.is_a? Element
state
child
c
child
state
c
child
c
child
c
p.elements.count
p.elements.cunt
p.count
child
q
p.to_s
p
element
c
doc.root
doc = Document.new File.read 'spec/fixtures/div/22-akalla.xml'
File.read 'spec/fixtures/div/22-akalla.xml'
akalla
c
element.class
element
c
@r.wtext
n
@r.wtext
n
@r.wtext
s
n
@r.wtext
@currtext
reformat_head
n
@currtext
head
@r.wtext
n
@r.isbold?
@r.wtext
n
@rs.map(&:wtext)
n
@r.wtext
n
@rs.map(&:wtext)
@currtext
c
q
@rs.map(&:wtext)
@r.map(&:wtext)
@currtext
head
c
q
@currtext
@rs.map(&:wtext)
n
@currtext
n
@currtext
@rs.map(&:wtext)
c
@rs.map(&:wtext)
@currtext
q
@currtext
c
q
@currtext
n
@rs.map(&:wtext)
@rs.count
@currtext
n
c
q
@currtext
n
@currtext
c
@rs.count
n
@rs.map(&:wtext)
@rs.count
@r.wtext
q
@rs.map(&:wtext)
@rs.count
@r.wtext
c
@r.wtext
r.wtext
c
expected == actual
c
actual.length.times { |n| puts n unless actual[n] == expected[n] }
actual == expected
c
actual
expected[242].ord
expectd[242].ord
actual[242].ord
actual.length.times { |n| puts n unless actual[n] == expected[n] }
actual.length { |n| puts n unless actual[n] == expected[n] }
expected == actual
c
title_tei_element
article_tei.to_s
q
article_formatted
formatted_article
n
article_formatted.to_s
article_formatted
article_tei.xpath
article_tei
artiklar_element.elements[n].xpath
artiklar_element.xpath
artiklar_elements.xpath
title_element_docx.xpath
title_tei
title_element_docx.to_s
n
title_docx
c
title_docx
c
title_docx
c
title_docx
c
title_docx
title_tei
c
title_tei
title_docx
c
title_docx
c
title_docx
c
title_tei
title_docx
c
title_tei
title_docx
c
title_tei
c
title_docx
eval n
c
eval n
c
title_docx
c
eval n
c
title_docx
title_tei
c
