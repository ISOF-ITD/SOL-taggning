q
c = @carryover
@carryover
n
@carryover
n
@carryover
q
@carryover
location
n
@carryover
r.text_bit
c
@carryover
r.text_bit
@carryover
c
@carryover
c
q
r.text_bit
@carryover
c
r.text_bit
@carryover
c
@carryover
r.text_bit
c
r.text_bit
@carryover
q
@currelem.root.to_s
@currelem.to_s
@carryover
r.text_bit
c
q
@carryover
n
location
n
location
locatoin
@carryover
n
@state
r.text_bit
c
@currelem.root.to_s
@state
r.text_bit
c
q
actual
expected
expected == actual
q
' Dalarna'.is_locale?
'Dalarna'.is_locale?
location.map(&:is_locale?)
location
locale.is_locale?
q
location
q
location.map(&:is_locale?)
location
locale.is_locale?
n
locale
bt
@currelem.parent.to_s
@currelem.parentto_s
@currelem.to_s
r.text_bit
q
c
r.isitalic?
r.text_bit
n
location
locale
first
n
@carryover
@currelem.to_s
r.text_bit
q
c
r.text_bit
@carryover
c
expected == actual
actual
expected
q
@carryover
n
@currelem.to_s
q
@currelem.to_s
r.text_bit
c
@currelem.to_s
r.text_bit
c
actual
expected
expected[127..155]
actual.length.times { |n| puts n unless actual[n] == expected[n] }
actual
c
expected == actual
expected
actual
q
@carryover
c
@carryover
location
r.text_bit
c
r.text_bit
c
actual
q
@carryover
t
n
r.text_bit
@state
c
r.text_bit
eval i
@state
c
eval i
r.text_bit
@state
c
q
actual
expected
expected == actual
q
locale
location
@currelem.root.to_s
r.text_bit
@carryover
c
actual
expected
expected == actual
c
q
c
q
c
q
@carryover
@currelem.root.to_s
@currelem.to_s
r.text_bit
tail
separator
location
c
eval i
@carryover
c
@currelem.name
@currelem.root.to_s
c
r.text_bit
@currelem.parent.to_s
c
@currelem.parent.to_s
r.text_bit
c
@currelem.parent.to_s
@currelem.to_s
r.text_bit
c
r.text_bit
q
r.text_bit
@state
eval i
@carryover
c
q
n
location
n
nil.respond_to? :=~
tail
n
separator
locale
separator
@currelem.parent.to_s
@currelem.to_s
locale
n
locale
n
first
n
locale
location
@carryover.split ','
@carryover
location
n
r.text_bit
@carryover
@currelem.parent.to_s
@currelem.to_s
n
@state
r.object_id
n
r.object_id
r.objectr_id
eval i
n
@state
eval i
r.text_bit
n
eval i
@carryover
@currelem.parent.to_s
@currelem.to_s
n
@currelem.to_s
n
@currelem.to_s
@currelem.to-s
n
@carryover
n
@currelem.to_s
@state
@carryover
r.text_bit
c
actual
c
actual
expected
c
expected == actual
