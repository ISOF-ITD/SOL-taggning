q
qy
child.to_s
child
q
child.to_s
child
state
c
child.to_s
child
state
q
p.each { |child| puts child.class }
p.each { 
child
state
c
state
child
c
child
c
q
child.to_s
c
child.to_s
child
c
n
child.to_s
child
state
n
state
child
n
child
n
child.to_s.gsub /\($/, ''
child.to_s.gsub /
child.to_s
child.is_opening_parenthesis?
child.is_opening_parenthesis?]
n
state
child.to_s
c
child.to
child.to_s
child.to+s
c
child
c
child.to_s
child
q
child
child == element[2][4]
c
child == element[2][4]
child == element[2][5]
child
element[2][5].to_s
element[2][5]
element[2][4]
element[2].map(&:class)
element[3].map(&:class)
element]3.map(&:class)
element.last.map(&:class)
element.map(&:class)
element.to_s
child.to_s
child
n
state
belägg
child.to_s
element.to_s
element
child
q
state
child.text
child.is_a? Element
child
c
element.to_s
element
q
child.to_s
child.to_s =~ /–/
child.is_a? Text
child
p.to_s
c
p.to_s
child
c
p.to_s
child
c
p.to_s
child
c
child
c
child
c
child
c
child
q
child.to_s
child
c
child
c
child
c
child
c
child
c
element.to_s
element
c
state
child.to_s
p.to_s
child
state
c
child
c
child.to_s
c
p.to_s
child
n
child
n
child
c
p.to_s
child.to_s
child
n
child
n
child
c
child
c
q
n
p.to_s
child.to_s
n
child.attributes['type'] == 'kursiv'
child.name == 'span'
child.is_a? Element
child.class
p.to_s
child.to_s
child
c
q
p.to_s
child
n
child
n
child.attributes['type']
child.name
child.is_a? Element
state
child
c
child
state
c
child
c
child
c
p.elements.count
p.elements.cunt
p.count
child
q
p.to_s
p
element
c
doc.root
doc = Document.new File.read 'spec/fixtures/div/22-akalla.xml'
File.read 'spec/fixtures/div/22-akalla.xml'
akalla
c
element.class
element
c
@r.wtext
n
@r.wtext
n
@r.wtext
s
n
@r.wtext
@currtext
reformat_head
n
@currtext
head
@r.wtext
n
@r.isbold?
@r.wtext
n
@rs.map(&:wtext)
n
@r.wtext
n
@rs.map(&:wtext)
@currtext
c
q
@rs.map(&:wtext)
@r.map(&:wtext)
@currtext
head
c
q
@currtext
@rs.map(&:wtext)
n
@currtext
n
@currtext
@rs.map(&:wtext)
c
@rs.map(&:wtext)
@currtext
q
@currtext
c
q
@currtext
n
@rs.map(&:wtext)
@rs.count
@currtext
n
c
