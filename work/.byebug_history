q
actual
expected
q
Regexp.new expected.to_s[0..127]
Regep.new expected.to_s[0..127]
expected.to_s[0..127]
expected.to_s.length
expected.to_s
expected.to_slength
expected.length
actual =~ expected
expected
actual
q
actual
expected
expected == actual
q
@currelem.to_s
c
@currtext
@currelem.to_s
@state
@staet
c
@state
c
@state
c
@state
c
@state
c
q
c
@currtext
@state
n
N
@currtext
@currelem.to_s
@state
n
@currelem.to_s
@currelem
n
$1
n
@currtext
n
@currtext
@state
n
@currtext
n
@state
n
@currelem.to_s
@currtext
n
@currelem.to_s
@currelem.name
n
@state
c
q
@currelem.root.to_s
n
@currelem.to_s
@state
c
@state
c
q
@currelem.root.to_s
@currelem.to_s
n
s
@carryover
@currtext = $1
n
@currtext
n
r.text_bit
@currtext
@state
c
@currtext
n
$1.is_locale?
$1
n
@currtext
n
@currtext
@currelem.to_s
n
@currelem.to_s
n
r.text_bit
@currtext
@state
c
@state
c
q
@currtext
@currelem.to_s
n
@state
c
@state
n
@state
$1
n
@state
@staet
c
quit
n
r.text_bit
n
r.text_bit
n
@state
c
@state
c
q
n
@state
n
$1.is_locale?
n
@currtext
n
@state
@staet
c
@state
c
@state
c
@state
c
q
$1
@currtext
n
@currtext
n
r.text_bit
@currtext
@state
c
@state
c
q
@currelem.root.to_s
@state
n
@currelem.root.to_s
@currelem.to_s
r.text_bit
@currtext
n
@state
c
@state
c
@state
c
q
@carryover
@currtext
n
@currtext
n
@state
@currtext
@carryover
r.text_bit
c
q
r.text_bit
@currtext
@currelem.root.to_s
@currelem.to_s
@currlem.to_s
n
@state
c
q
n
@currtext
n
@state
n
@state
n
@carryover
@currtext
@currelem.to_s
@currelem.root.to_s
@currelem.to_s
n
@currtext
n
r.text_bit
c
q
r.text_bit
@currtext
n
@state
c
q
@currtext
n
@state
c
q
@currtext
n
@state
@satte
c
q
@currtext
n
c
q
@currelem.root.to_s
@currelem.to_s
@currtext
n
@state
c
q
@currtext
@currelem.to_s
n
@state
c
@state
c
q
@currtext.gsub '^', ''
@currtext.gsub '(.)', ''
@currtext.gsub '^(.)', '\1'
$1
@currtext.gsub '(.)', '\1'
@currtext.gsub '^([^,]*)', '\1'
@currtext.gsub '([^,]*)', '\1'
