c
actual
expected
expected == actual
c
q
c
location
locatoin
locale
n
q
down
up
n
r.text_bit
c
state
c
n
state
r.text_bit
location
q
c
n
first
locale
c
actual
expected
expected == actual
c
expected == actual
q
expected[102].ord
expcted[102].ord
actual[90..110]
expected[90..110]
actual.length.times { |n| puts n unless actual[n] == expected[n] }
actual
expected
expected == actual
q
carryover
r.text_bit
p.text
c
p.text
n
div.to_s
p.text
n
p.text
p.to_s
n
div.to_s
n
div.to_s
div.text
n
div.text
n
div.text
div.to_s
carryover
c
q
div.text
n
r.text_bit
div.text
c
div.text
c
div.text
div.to-s
q
div.text
div.to_s
p.to_s
c
r.text_bit
c
p.to_s
c
actual
expected
expected == actual
c
actual
expected
actual == expected
q
actual
expected
expected == actual
c
actual
expected
c
q
c
n
locale
n
location
n
first
r.text_bit
location
n
q
r.text_bit
c
r.text_bit
q
n
r.text_bit
 c
q
carryover
r.text_bit
c
r.text_bit
c
q
carryover
c
n
tail
n
state
r.text_bit
c
actual
expected
c
div.to_s
r.text_bit
c
r.text_bit
c
carryover
div.to_s
r.text_bit
state
c
n
location
n
location
locale
n
location
n
r.text_bit
n
state
r.text_bit
c
r.text_bit
c
r.text_bit
q
r.text_bit
carryover
div.to_s
c
n
carryover
location
div.to_s
p.to_s
c
p.to_s
div.to_s
n
state
r.text_bit
c
state
r.text_bit
c
state
r.text_bit
c
actual
expected
c
actual == expected
c
actual
expected
actual == expected
c
locale
n
loc
c
loc
q
actual
expected
t
actual == expecged
c
expected == actual
c
expected[400..420]
actual.length.times { |n| puts n unless expected[n] == actual[n] }
actual == expected
c
q
actual[312..372]
expected[312..372]
actual[105]
expected[105]
actual.length.times { |n| puts n unless expected[n] == actual[n] }
actual == expected
actual
expected
c
actual
expected
actual == expected
c
actual
expected
expected == actual
q
actual
expected
actual == expected
c
formatted.to_s
c
q
qx
actual[600..650]
acctual[600..650]
expected[600..650]
actual.length.times { |n| puts n unless expected[n] == actual[n] }
actual == expected
actual == expeced
actual == expecred
c
actual[460..500]
expected[460..500]
actual.length.times { |n| puts n unless expected[n] == actual[n] }
actual
expected
q
actual
expected
c
