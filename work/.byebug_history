q
article_formatted
formatted_article
n
article_formatted.to_s
article_formatted
article_tei.xpath
article_tei
artiklar_element.elements[n].xpath
artiklar_element.xpath
artiklar_elements.xpath
title_element_docx.xpath
title_tei
title_element_docx.to_s
n
title_docx
c
title_docx
c
title_docx
c
title_docx
c
title_docx
title_tei
c
title_tei
title_docx
c
title_docx
c
title_docx
c
title_tei
title_docx
c
title_tei
title_docx
c
title_tei
c
title_docx
eval n
c
eval n
c
title_docx
c
eval n
c
title_docx
title_tei
c
title_docx
title_tei
c
title_docx
c
title_docx
c
title_docx
eval n
c
n
title_docx
n
eval n
n
q
article_tei
title
q
article_tei.to_s
article_tei
id
q
id
article_tei.to_s
q
@currelem
n
head.capitalised?
head
q
reformat_head
c
par2.to_s
XPath.first(par2, 'p/span[@type="fet"]')
XPath.first(par, 'p/span[@type="fet"]')
par2 = solig.unword(al2, false)
al2 = allal.elements[2]
al2 = allall.elements[2]
XPath.first(par, 'p/span[@type="fet"]')
XPath.first(par, 'p/span').attributes['type']
XPath.first(par, 'p/span[type=fet]')
XPath.first(par, 'p/span[type="fet"]')
par.class
par.name
XPath.first(par, 'div/p/span')
XPath.first(par, 'p/span')
XPath.first(par, 'div/span')
XPath.first(par, 'dov/span')
XPath.first(par, '//span')
XPath.first(par, 'span')
par = solig.unword(al, false)
c
q
solig.unword(al, false).to_s
c
solig.unword(al, false).to_s
solig.unword(al, false).to-s
q
solig.unword(al, false).to_s
c
@currtext
n
@currtext
@currelem.to_s
n
@currelem.to_s
locale.strip
locale
n
c
reformat_head
n
@currelem.to_s
@currelem
@currtext
locale
c
@currtext
@cuurtext
q
qq
puts al.to_s
puts _
al.to_s
c
allal.elements.count
allal.root.elements.count
allal
allall
c
pars.root.elements.count
pars.elements.count
pars.class
c
element = ret.root.elements.first
ret.root.elements.count
c
head.to_s
head = ret.elements.first.elements.first
head = ret.elements.first
ret.root.name
ret.name
ret
ret.class
q
self
r
c
q
doc.root.elements.count
doc.root.elements
doc.root
doc
q
actual
expected
expected == actual
c
actual
expected
expected == actual
c
q
c
q
actual
expected
expected == actual
c
q
@currelem.to_s
n
reformat_head
c
actual
expected
expected == actual
expected == actuall
c
reformat_head
c
q
s
reformat_head
c
reformat_head
q
actual
expected
expected == actual
c
actual
expected
expected == actual
c
actual
expected
expected == actual
c
actual
expected
expected == actual
q
expected
actual
actual.to_s
c
actual
expected
c
@currelem.to_s
n
@currelem.to_s
n
@currelem.to_s
@currelem
n
@currelem.root.to_s
n
@currelem.root.to_s
reformat_head
q
c
@currelem.to_s
n
@currelem.root.to_s
@currelem.to_s
span_element.to_s
n
span_element.to_s
span
n
reformat_head
n
self
s
n
s
q
n
c
n
