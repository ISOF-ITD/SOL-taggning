q
element
up
up 3
bt
element
locale
c
locale
c
locale
c
sol.instance_variable_get :@errors
proc.batch element
sol.instance_variable_get :@errors
q
element.class
element.elements.count { |p| p.name == 'p' }
element.elements.select { |p| p.name == 'p' }.count
element.elements.count
element
c
q
sol.elements.count
sol.elements
sol
sol.root
sol
File.expand_path '../SOL2.xml', __FILE__
sol.root
sol.root.elements[2]
sol.root.elements[2].elements[2].elements[2].elements[74]
sol
q
File.expand_path '../../SOL2.xml', __FILE__
sol.root
element = sol.root.elements[2]
element = sol.root.elements[2].elements[2]
element = sol.root.elements[2].elements[2].elements[2]
q
element
locale
q
out.to_s[260..367]
expected[260..367]
expected.length.times { |n| puts n if expected[n] != out.to_s[n] }
expected == out.to_s
expected = "<root><div><head><placeName>Vákkudavárre</placeName></head> <p><span type='locale'>fjäll</span>, <location><district type='socken'>Gällivare sn</district><region type='landskap'>Lappland</region></location></p></div><figure><graphic url='bilder/image_1234.jpg' /></figure><div><head><placeName>Vaksala</placeName></head> <p><span type='locale'>sn</span>, <location><district type='härad'>Vaksala hd</district><region type='landskap'>Uppland</region></location></p></div></root>"
expected = "<root><div><head><placeName>Vákkudavárre</placeName></head> <p><span type='locale'>fjäll</span>, <location><district type='socken'>Gällivare sn</district><region type='landskap'>Lappland</region></location></p></div><figure><graphic url='bilder/image_1234.jpg' /></figure><div><head><placeName>Vaksala</placeName></head> <p><span type='locale'>sn</span>, <location><district type='härad'>Vaksala hd</district><region type='landskap'>Uppland</region></location></p></div></root>
expected =<<_EOD_
quit
out.to_s[140..255]
expected[140..255]
expected.length.times { |n| puts n if expected[n] != out.to_s[n] }
out.to_s == expected
out.to_s
out.root
out
expected = "<root><div><head><placeName>Vákkudavárre</placeName></head> <p><span type='locale'>fjäll</span>, <location><district type='socken'>Gällivare</district><region type='landskap'>Lappland</region></location></p></div><figure><graphic url='bilder/image_1234.jpg' /></figure><div><head><placeName>Vaksala</placeName></head> <p><span type='locale'>sn</span>, <location><district type='härad'>Vaksala hd</district><region type='landskap'>Uppland</region></location></p></div></root>"
expected = '<root><div><head><placeName>Vákkudavárre</placeName></head> <p><span type='locale'>fjäll</span>, <location><district type='socken'>Gällivare</district><region type='landskap'>Lappland</region></location></p></div><figure><graphic url='bilder/image_1234.jpg' /></figure><div><head><placeName>Vaksala</placeName></head> <p><span type='locale'>sn</span>, <location><district type='härad'>Vaksala hd</district><region type='landskap'>Uppland</region></location></p></div></root>'
c
doc.root
retvalue.name
doc.name
doc
q
place_element.to_s
place_element
n
tag_element.to_s
tag_element
n
attr
tag
q
place_element.to_s
c
place_element.to_s
c
place_element.to_s
c
place_element.to_s
q
place_element.to_s
c
place_element.to_s
q
place_element.to_s
c
place_element.to_s
q
place_element.to_s
q
sentences
remsentences
q
foo = nil.join if nil
foo = ['b', 'c'].join if ['b', 'c']
nil.respond_to? :join
['b', 'c'].join
nil.respond_to? :map
expected[227..-1]
xml_strip[227..-1]
xml_strip
xml_strip[227..250]
expected[227..250]
expected.length.times { |n| if expected[n] != xml_strip[n] then puts n end }
expected = '<head><placeName>Abbekås</placeName></head> <P><locale>tätort</locale>, <location><district type="socken">Skivarps sn</district>, <district type="härad">Vemmenhög hd</district>, <region type="landskap">Skåne</region></location>. Abbekassz 1536. – Namnet på detta gamla fiskeläge innehåller troligen mansnamnet fda. Abbi.'
q
xml_strip[216..226]
xml_strip
expected
expected[216..226]
expected[216..227]
xml_strip.length.times { |n| if xml_strip[n] != expected[n] then puts n end }
xml_strip.length.times { |n| if xml_strip[n] != expected[n] then puts n; exit end }
xml_strip.length.times { |n| if xml_strip[n] != expected[n] then puts n; break end }
xml_strip.length.times { |n| if xml_strip[n] != expected[n] then puts n else }
xml_strip.length.times { |n| if xml_strip[n] != expected[n] then puts n; break else }
expected == xml_strip
expected = '<head><placeName>Abbekås</placeName></head> <P><locale>tätort</locale>, <location><district type="socken">Skivarps sn</district>, <district type="härad">Vemmenhög hd</district>, <region type="landskap">Skåne</region>. Abbekassz 1536. – Namnet på detta gamla fiskeläge innehåller troligen mansnamnet fda. Abbi.'
expected== '<head><placeName>Abbekås</placeName></head> <P><locale>tätort</locale>, <location><district type="socken">Skivarps sn</district>, <district type="härad">Vemmenhög hd</district>, <region type="landskap">Skåne</region>. Abbekassz 1536. – Namnet på detta gamla fiskeläge innehåller troligen mansnamnet fda. Abbi.'
expected == '<head><placeName>Abbekås</placeName></head> <P><locale>tätort</locale>, <location><district type="socken">Skivarps sn</district>, <district type="härad">Vemmenhög hd</district>, <region type="landskap">Skåne</region>. Abbekassz 1536. – Namnet på detta gamla fiskeläge innehåller troligen mansnamnet fda. Abbi.'
c
graphic.attributes['url']
graphic.attributes
graphic
c
q
expected.split("\n").count == res.split("\n")
expected_lines.count.times { |n| puts expected_lines[n] == res.split("\n")[n] }
expected_lines = expected.split("\n")
expected == res
puts expected.split("\n")[3]
puts expected.split[3]
puts res
puts expected
expected = File.read '/tmp/foo'
expected =<<_EoJustP_
_EoJustP_
</root>
  <p>Svenska häradsnamn. Uppsala–Köpenhamn 1965. (Nomina Germanica 14.)</p>
  <p>I: Suffixbildungen in alten Ortsnamen (se detta). S. 13–26.</p>
  <p>Die Suffixbildungen in der altgermanischen Toponymie.</p>
<root>
expected =<<_EoJustP_
q
c
res
</root>
  <p>Svenska häradsnamn. Uppsala–Köpenhamn 1965. (Nomina Germanica 14.)</p>
  <p>I: Suffixbildungen in alten Ortsnamen (se detta). S. 13–26.</p>
  <p>Die Suffixbildungen in der altgermanischen Toponymie.</p>
expected = <root>
q
element.elements[2]
element.elements[1]
element.elements
element.elements.count
q
element.name
c
element.elements[2].text
element.elements[2]
element.elements.count
q
final_result
q
elts[2].text
elts[0].text
elts[1].text
elts[1]
elts.count
elts.last
elts.first.text
elts.first
elts
result.last
result
q
elts.first.text
elts.first
elts
c
q
exp[200..238]
exp[200]
exp.length.times { |i| if exp[i] != xml_strip[i] then puts i end }
exp.length.times { |i| if exp[i] != xml_strip[i] then puts i; exit end }
exp.length.times { |i| if exp[i] != xml_strip[i] then puts i; exit else end }
exp.length.times { |i| if exp[i] != xml_strip[i] then puts i; break else end }
exp.length.times { |i| puts i }
exp.length.times { |i| if exp[i] != xml_strip[i] then puts i; puts exp[i]; puts xml_strip[i]; break; end }
exp.each { |i| puts i }
exp.each_char_with_index { |c, i| puts c, i }
xml_strip[4]
xml_strip[5]
exp.each_char { |c| puts c }
exp = '<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och <district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>'
xml_strip
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och <district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>'
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och <district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>' == xml_strip
xml_strip
q
xml_strip
xml_strp
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och </district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>'
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och </district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>' == xml_strip
q
xml_strip
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och </district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>'
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och </district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>' == xml_strip
q
xml_strip
'<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och </district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>'
xml_strip == '<head><placeName>Kinnekulle</placeName></head> <P><locale>berg</locale>, <location><district type="härad">Kinne</district> och </district type="härad">Kinnefjärdings</district> hd, <region type="landsksap">Västergötland</region></location>'
xml_strip
q
c
xml_strip
q
xml_strip
q
xml_strip
q
l.pop
l
l = locs.clone
locs
c
xml_strip
c
xml_strip
line
c
q
line
array
element
q
element
array
place
array
locale
element
attr
tag
